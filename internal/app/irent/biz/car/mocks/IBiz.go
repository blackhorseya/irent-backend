// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	contextx "github.com/blackhorseya/gocommon/pkg/contextx"
	car "github.com/blackhorseya/irent/internal/pkg/entity/car"

	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IBiz is an autogenerated mock type for the IBiz type
type IBiz struct {
	mock.Mock
}

// NearTopN provides a mock function with given fields: ctx, top, latitude, longitude
func (_m *IBiz) NearTopN(ctx contextx.Contextx, top int, latitude float64, longitude float64) ([]*car.Info, int, error) {
	ret := _m.Called(ctx, top, latitude, longitude)

	var r0 []*car.Info
	if rf, ok := ret.Get(0).(func(contextx.Contextx, int, float64, float64) []*car.Info); ok {
		r0 = rf(ctx, top, latitude, longitude)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*car.Info)
		}
	}

	var r1 int
	if rf, ok := ret.Get(1).(func(contextx.Contextx, int, float64, float64) int); ok {
		r1 = rf(ctx, top, latitude, longitude)
	} else {
		r1 = ret.Get(1).(int)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(contextx.Contextx, int, float64, float64) error); ok {
		r2 = rf(ctx, top, latitude, longitude)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// NewIBiz creates a new instance of IBiz. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIBiz(t testing.TB) *IBiz {
	mock := &IBiz{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
